{
	"name": "Pl_DV_SQL_Iteratively_11",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Script1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select Table_Name, SQL from source_table_dataverse;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Ds_Dataverse_Sourcetb_SQl1",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": true,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "name",
								"value": {
									"value": "@item().Table_Name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Copy data2",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set variable1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "CommonDataServiceForAppsSource"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".csv"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "Ds_dataverse_auto1",
									"type": "DatasetReference",
									"parameters": {
										"name": {
											"value": "@concat('cr5d1_', toLower(variables('name')))\n",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "snkk1",
									"type": "DatasetReference",
									"parameters": {
										"name": {
											"value": "@concat(variables('name'),utcNow())",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Script1",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'source_table_dataverse')\r\nBEGIN\r\n    CREATE TABLE dbo.source_table_dataverse (\r\n        Table_Name NVARCHAR(255),\r\n        [SQL] NVARCHAR(MAX)\r\n    );\r\nEND;\r\n\r\ntruncate table dbo.source_table_dataverse;\r\n\r\ninsert into dbo.source_table_dataverse(Table_Name,[SQL])\r\nvalues('Employee_data_mk','select * from Employee_data_mk'),\r\n      ('Location_data_mk','select * from Location_data_mk'),\r\n      ('Manager_data_mk','select * from Manager_data_mk');"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Ds_Gm_Azure1",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy data3",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Ds_Azure_21",
									"type": "DatasetReference",
									"parameters": {
										"file": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Ds_sink_final1",
									"type": "DatasetReference",
									"parameters": {
										"Table_name": {
											"value": "@substring(item().name, 0, sub(length(item().name), 28))\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"name": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Maan_Github_Integration/Dataverse"
		},
		"annotations": [],
		"lastPublishTime": "2024-05-20T07:24:27Z"
	}
}